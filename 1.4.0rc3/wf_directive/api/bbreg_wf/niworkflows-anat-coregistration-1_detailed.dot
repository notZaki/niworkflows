digraph structs {
node [shape=record];
bbreg_wfinputnode [label="{IN}|{ inputnode | utility |  }|{OUT|<outfsnative2t1wxfm> fsnative2t1w_xfm|<outinfile> in_file|<outsubjectid> subject_id|<outsubjectsdir> subjects_dir}"];
bbreg_wfmri_coreg [label="{IN|<insourcefile> source_file|<insubjectid> subject_id|<insubjectsdir> subjects_dir}|{ mri_coreg | freesurfer |  }|{OUT|<outoutltafile> out_lta_file|<outoutreport> out_report}"];
bbreg_wfbbregister [label="{IN|<ininitregfile> init_reg_file|<insourcefile> source_file|<insubjectid> subject_id|<insubjectsdir> subjects_dir}|{ bbregister | freesurfer |  }|{OUT|<outoutltafile> out_lta_file|<outoutreport> out_report}"];
bbreg_wfreports [label="{IN|<inin1> in1|<inin2> in2}|{ reports | utility |  }|{OUT|<outout> out}"];
bbreg_wftransforms [label="{IN|<inin1> in1|<inin2> in2}|{ transforms | utility |  }|{OUT|<outout> out}"];
bbreg_wflta_ras2ras [label="{IN|<ininlta> in_lta}|{ lta_ras2ras | freesurfer |  }|{OUT|<outoutlta> out_lta}"];
bbreg_wfcompare_transforms [label="{IN|<inltalist> lta_list}|{ compare_transforms | utility |  }|{OUT|<outout> out}"];
bbreg_wfselect_report [label="{IN|<inindex> index|<ininlist> inlist}|{ select_report | utility |  }|{OUT|<outout> out}"];
bbreg_wfselect_transform [label="{IN|<inindex> index|<ininlist> inlist}|{ select_transform | utility |  }|{OUT|<outout> out}"];
bbreg_wfmerge_ltas [label="{IN|<inin1> in1|<inin2> in2}|{ merge_ltas | utility |  }|{OUT|<outout> out}"];
bbreg_wfconcat_xfm [label="{IN|<ininxfms> in_xfms}|{ concat_xfm | nitransforms |  }|{OUT|<outoutinv> out_inv|<outoutxfm> out_xfm}"];
bbreg_wfoutputnode [label="{IN|<infallback> fallback|<initkepitot1w> itk_epi_to_t1w|<initkt1wtoepi> itk_t1w_to_epi|<inoutreport> out_report}|{ outputnode | utility |  }|{OUT}"];
bbreg_wfbbregister:outoutltafile:e -> bbreg_wftransforms:inin1:w;
bbreg_wfbbregister:outoutreport:e -> bbreg_wfreports:inin1:w;
bbreg_wfcompare_transforms:outout:e -> bbreg_wfoutputnode:infallback:w;
bbreg_wfcompare_transforms:outout:e -> bbreg_wfselect_report:inindex:w;
bbreg_wfcompare_transforms:outout:e -> bbreg_wfselect_transform:inindex:w;
bbreg_wfconcat_xfm:outoutinv:e -> bbreg_wfoutputnode:initkt1wtoepi:w;
bbreg_wfconcat_xfm:outoutxfm:e -> bbreg_wfoutputnode:initkepitot1w:w;
bbreg_wfinputnode:outfsnative2t1wxfm:e -> bbreg_wfmerge_ltas:inin2:w;
bbreg_wfinputnode:outinfile:e -> bbreg_wfbbregister:insourcefile:w;
bbreg_wfinputnode:outinfile:e -> bbreg_wfmri_coreg:insourcefile:w;
bbreg_wfinputnode:outsubjectid:e -> bbreg_wfbbregister:insubjectid:w;
bbreg_wfinputnode:outsubjectid:e -> bbreg_wfmri_coreg:insubjectid:w;
bbreg_wfinputnode:outsubjectsdir:e -> bbreg_wfbbregister:insubjectsdir:w;
bbreg_wfinputnode:outsubjectsdir:e -> bbreg_wfmri_coreg:insubjectsdir:w;
bbreg_wflta_ras2ras:outoutlta:e -> bbreg_wfcompare_transforms:inltalist:w;
bbreg_wfmerge_ltas:outout:e -> bbreg_wfconcat_xfm:ininxfms:w;
bbreg_wfmri_coreg:outoutltafile:e -> bbreg_wfbbregister:ininitregfile:w;
bbreg_wfmri_coreg:outoutltafile:e -> bbreg_wftransforms:inin2:w;
bbreg_wfmri_coreg:outoutreport:e -> bbreg_wfreports:inin2:w;
bbreg_wfreports:outout:e -> bbreg_wfselect_report:ininlist:w;
bbreg_wfselect_report:outout:e -> bbreg_wfoutputnode:inoutreport:w;
bbreg_wfselect_transform:outout:e -> bbreg_wfmerge_ltas:inin1:w;
bbreg_wftransforms:outout:e -> bbreg_wflta_ras2ras:ininlta:w;
bbreg_wftransforms:outout:e -> bbreg_wfselect_transform:ininlist:w;
}